<!DOCTYPE html>
<html>

<head>
	<link href="https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900|Material+Icons" rel="stylesheet">
	<link href="https://cdnjs.cloudflare.com/ajax/libs/vuetify/1.5.1/vuetify.css" rel="stylesheet">
	<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no, minimal-ui">
	<style>
		@media screen and (max-width: 970px) {
			.episode_img {
				display: none !important;
			}

			.episode_overview {
				color: blue;
				display: none !important;
			}
		}
	</style>
</head>

<body>
	<v-app id="app" style="background: #263238;">
		<template>
			<v-toolbar dark color="#455B66" style="font-family: roboto;">
				<v-toolbar-title class="hidden-sm-and-down" id="home" style="cursor: pointer"
					class="display-1 font-weight-light">Hypertube</v-toolbar-title>
				<v-flex style="margin-left: 10%;">
					<v-text-field hide-details prepend-icon="search" single-line id="search_input" style="width: 70%;">
					</v-text-field>
				</v-flex>
				<v-spacer></v-spacer>
				<v-toolbar-items class="hidden-sm-and-down">
					<v-btn v-for="item in menu" :href="item.href" flat>{{ item.title }}</v-btn>
				</v-toolbar-items>
				<v-menu dark color="#455B66" class="hidden-md-and-up">
					<v-toolbar-side-icon slot="activator"></v-toolbar-side-icon>
					<v-list>
						<v-list-tile v-for="item in menu" :key="item.icon">
							<v-list-tile-content>
								<v-list-tile-title><a :href="item.href">{{ item.title }}</a></v-list-tile-title>
							</v-list-tile-content>
						</v-list-tile>
					</v-list>
				</v-menu>
			</v-toolbar>
			<v-container grid-list-md text-xs-center>
				<v-layout>
					<v-dialog v-model="dialog" hide-overlay persistent width="300">
						<v-card color="primary" dark>
							<v-card-text text-xs-center>
								Please stand by, We are preparing your episode..
								<v-progress-linear v-model="load_value" color="#43C59E" height="10"></v-progress-linear>
							</v-card-text>
						</v-card>
					</v-dialog>
					<v-flex md4>
						<img :src="img" style="max-width: 100%; height: auto;">
					</v-flex>
					<v-flex>
						<v-layout column>
							<v-flex ml-5 mr-5>
								<v-select v-on:change="loadEpisodes" :items="seasons" label="Pick a season"></v-select>
							</v-flex>
							<v-flex mx-5 my-2 v-for="episode in episodes">
								<!-- v-for -->
								<v-card>
									<v-layout align-center justify-space-between row fill-height>
										<img class="episode_img" height="150px" width="auto" :src="episode.still_path">
										<v-card-title primary-title>
											<div>
												<h3 class="headline mb-0">Episode {{ episode.episode_number }}</h3>
												<div class="episode_overview">{{ episode.overview }}</div>
											</div>
										</v-card-title>
										<v-card-actions>
											<v-btn flat color="primary" v-on:click="goto_episode(episode)">Play</v-btn>
										</v-card-actions>
									</v-layout>
								</v-card>
							</v-flex>
						</v-layout>
					</v-flex>
				</v-layout>
			</v-container>
		</template>
	</v-app>
	<script src="https://cdn.jsdelivr.net/npm/vue"></script>
	<script src="https://cdn.jsdelivr.net/npm/vuetify@1.5.10/dist/vuetify.min.js"></script>
	<script src="https://code.jquery.com/jquery-3.3.1.js"
		integrity="sha256-2Kok7MbOyxpgUVvAk/HJ2jigOSYS2auK4Pfzbm7uH60=" crossorigin="anonymous"></script>
	<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
	<script>
		let vm = new Vue({
			el: '#app',
			data() {
				return {
					load_value: 0,
					dialog: false,
					seasons: [],
					episodes: [],
					img: '',
					id: '',
					name: '',
					menu: [
						{ href: '/', title: 'Movies' },
						{ href: 'tv', title: 'Tv shows' },
						{ href: 'stats', title: 'Stats' },
						{ href: 'logout', title: 'Logout' }
					]
				}
			},
			methods: {
				menuItems() {
					return this.menu
				},
				goto_episode(episode) {
					this.dialog = true
					window.location.href = '/episode?id=' + episode.show_id + '&name=' + this.name + '&season=' + episode.season_number + '&episode=' + episode.episode_number
					setInterval(() => {
						axios.get('/size?id=' + episode.id + '&tv=true').then(response => {
							if (response.data != false) {
								this.load_value = parseInt(response.data);
							}
						})
					}, 500);
				},
				loadEpisodes(a) {
					let season = a.split(' ')[1];

					axios.get('https://api.themoviedb.org/3/tv/' + vm.id + '/season/' + season + '?api_key=<%= process.env.MOVIE_DB_API_KEY %>&language=en-US').then(response => {

						let today = new Date().getTime();

						for (let i = 0; i < response.data.episodes.length; i++) {
							if (today < new Date(response.data.episodes[i].air_date).getTime()) {
								response.data.episodes.splice(i);
							}
							else {
								if (response.data.episodes[i].still_path) {
									response.data.episodes[i].still_path = 'https://image.tmdb.org/t/p/w1280' + response.data.episodes[i].still_path;
								}
								else {
									response.data.episodes[i].still_path = 'https://user-images.githubusercontent.com/24848110/33519396-7e56363c-d79d-11e7-969b-09782f5ccbab.png';
								}
							}
						}
						vm.episodes = response.data.episodes;
					});
				}
			}
		})

		window.onload = function () {
			const id = window.location.search.substring(1).split('=')[1];

			vm.id = id;
			axios.get('https://api.themoviedb.org/3/tv/' + id + '?api_key=<%= process.env.MOVIE_DB_API_KEY %>&language=en-US').then(response => {
				const show = response.data;
				let j = 0;

				vm.seasons.splice(parseInt(show.number_of_seasons));
				vm.name = show.original_name;
				if (!show.poster_path) {
					vm.img = 'https://user-images.githubusercontent.com/24848110/33519396-7e56363c-d79d-11e7-969b-09782f5ccbab.png';
				}
				else {
					vm.img = 'https://image.tmdb.org/t/p/w1280' + show.poster_path;
				}
				for (let i = 0; i < show.seasons.length; i++) {
					if (parseInt(show.seasons[i].season_number) > 0) {
						Vue.set(vm.seasons, j, 'Season ' + parseInt(show.seasons[i].season_number));
						j++;
					}
				}
			});

			const search = document.getElementById("search_input");

			search.onkeyup = function (event) {
				if (event.keyCode == 13) {
					window.location.replace('/tvQuery?name=' + search.value);
				}
			}

			document.getElementById("home").onclick = function () {
				window.location.replace('/');
			}
		}
	</script>
	<style scoped>
		a {
			text-decoration: none;
			color: white;
		}
	</style>
</body>

</html>