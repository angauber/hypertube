<!DOCTYPE html>
<html>
<head>
	<link href="https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900|Material+Icons" rel="stylesheet">
	<link href="https://cdn.jsdelivr.net/npm/vuetify/dist/vuetify.min.css" rel="stylesheet">
	<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no, minimal-ui">
	<style>
	.clickable {
		cursor: pointer;
	}
	@media screen and (min-width: 1200px) and (max-width: 10000px) {
		#logbox {
			width: 15%;
		}
	}
	</style>
</head>
<body>
	<v-app id="app" style="background: #263238;">
		<template>
			<div class="error" style="text-align: center"></div>
			<v-layout align-center justify-center row fill-height>
				<v-card dark color="#2B4570" id="logbox">
					<v-card-text>
						<p class="display-1 text-xs-center">Sign in</p>
					</v-card-text>
					<v-container>
						<v-form
							ref="signin-form"
							id="signin-form"
						>
							<v-layout column>
								<v-flex>
									<v-text-field
									label="Username"
									name="username"
									:rules="[rules.required, rules.username]"
									solo
									></v-text-field>
								</v-flex>
								<v-flex>
									<v-text-field
									name="password"
									:append-icon="show1 ? 'visibility' : 'visibility_off'"
									:rules="[rules.required, rules.password]"
									:type="show1 ? 'text' : 'password'"
									label="Password"
									hint="At least 8 characters"
									class="input-group--focused"
									@click:append="show1 = !show1"
									solo
									></v-text-field>
								</v-flex>
							</v-layout>
							<v-layout align-center justify-center>
								<v-btn type='submit' color="#5F5AA2">Login</v-btn>
							</v-layout>
						</v-form>
						<v-layout align-center justify-center mt-4>
							<div style="width: 60px; height: 60px; margin-right: 20px">
								<v-img src="https://upload.wikimedia.org/wikipedia/commons/thumb/8/8d/42_Logo.svg/1024px-42_Logo.svg.png"
								aspect-ratio="1"
								width="60px"
								height="60px"
								class="clickable"
								v-on:click="window.location.href = 'https://api.intra.42.fr/oauth/authorize?client_id=e4c94fbb3b0c602e87b8b6ec7065ed7d474d40adcc4b6450beb63a723d7552a4&redirect_uri=http%3A%2F%2Flocalhost%3A8008%2F42auth&response_type=code';"
								>
							</div>
							<div mx-1 style="width: 50px; height: 60px;">
								<v-img
								src="https://cdn2.iconfinder.com/data/icons/social-icons-circular-color/512/github-512.png"
								aspect-ratio="1"
								width="60px"
								height="60px"
								class="clickable"
								v-on:click="window.location.href = 'https://github.com/login/oauth/authorize?client_id=065c3a7f21bf12230852&redirect_uri=http://localhost:8008/gitauth&scope=read:user';"
								>
							</div>
						</v-layout>
					</v-container>
					<v-card-text>
						<p class="clickable body-2 text-xs-center" v-on:click="window.location.href = '/forget-password';">Forgot password ?</p>
						<p class="clickable body-2 text-xs-center" v-on:click="window.location.href = '/signup';">Sign up</p>
					</v-card-text>
				</v-card>
			</v-layout>
		</template>
	</v-app>
	<script src="https://cdn.jsdelivr.net/npm/vue"></script>
	<script src="https://cdn.jsdelivr.net/npm/vuetify@1.5.10/dist/vuetify.min.js"></script>
	<script src="https://code.jquery.com/jquery-3.3.1.js" integrity="sha256-2Kok7MbOyxpgUVvAk/HJ2jigOSYS2auK4Pfzbm7uH60=" crossorigin="anonymous"></script>
	<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
	<script src="/js/ajax.js"></script>
	<script>
	new Vue({
		el: '#app',
		data () {
			return {
				show1: false,
				show2: false,
				imageName: '',
				imageUrl: '',
				imageFile: '',
				rules: {
					required: value => !!value || 'Required.',
					name: v => (v && v.length >= 2) || 'Min 2 characters',
					username: v => (v && v.length >= 2) || 'Min 2 characters',
					email: v => (v && this.validateEmail(v)) || 'Wrong email format',
					password: v => (v && v.length >= 8) || 'Min 8 characters with 2 at least digits'
				}
			}
		},
		methods: {
			validateEmail: function(email) {
				var re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
				return re.test(email);
			},
			pickFile () {
				this.$refs.image.click ()
			},
			onFilePicked (e) {
				const files = e.target.files
				if(files[0] !== undefined) {
					this.imageName = files[0].name
					if(this.imageName.lastIndexOf('.') <= 0) {
						return
					}
					const fr = new FileReader ()
					fr.readAsDataURL(files[0])
					fr.addEventListener('load', () => {
						this.imageUrl = fr.result
						this.imageFile = files[0] // this is an image file that can be sent to server...
					})
				} else {
					this.imageName = ''
					this.imageFile = ''
					this.imageUrl = ''
				}
			}
		}
	})
	</script>

</body>
</html>
